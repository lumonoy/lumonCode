<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Assign_Queue</name>
        <label>Assign Queue</label>
        <locationX>605</locationX>
        <locationY>1202</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Queue_Id.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_ST</name>
        <label>Assign ST</label>
        <locationX>162</locationX>
        <locationY>501</locationY>
        <assignmentItems>
            <assignToReference>varST</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_ST_from_Asset.ServiceTerritory__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ST_could_be_read</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_ST_0</name>
        <label>Assign ST</label>
        <locationX>401</locationX>
        <locationY>496</locationY>
        <assignmentItems>
            <assignToReference>varST</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_ST_from_WO.ServiceTerritoryId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ST_could_be_read</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_ST_0_0</name>
        <label>Assign ST</label>
        <locationX>682</locationX>
        <locationY>380</locationY>
        <assignmentItems>
            <assignToReference>varST</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_ST_from_WOLI.ServiceTerritoryId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ST_could_be_read</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Related WO only exists if this is ongoing (installer initiated) reclamation. Otherwise Asset exists and needs to be used instead.</description>
        <name>Originator_of_the_Case</name>
        <label>Originator of the Case</label>
        <locationX>168</locationX>
        <locationY>381</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>Installer_initiated_from_WO</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Work_Order__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_ST_from_WO</targetReference>
            </connector>
            <label>Installer initiated from WO</label>
        </rules>
        <rules>
            <name>Customer_initiated_from_WOLI</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Work_Order_Line_Item__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_ST_from_WOLI</targetReference>
            </connector>
            <label>Customer initiated from WOLI</label>
        </rules>
        <rules>
            <name>Customer_initiated_from_Asset</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AssetId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_ST_from_Asset</targetReference>
            </connector>
            <label>Customer initiated from Asset</label>
        </rules>
    </decisions>
    <decisions>
        <name>Queue_Id_exists</name>
        <label>Queue Id exists?</label>
        <locationX>483</locationX>
        <locationY>1084</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes6</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Id.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Queue</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Queue_name_exists_in_ST</name>
        <label>Queue name exists in ST</label>
        <locationX>384</locationX>
        <locationY>846</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes5</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_name.Related_Case_Queue_name__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Id</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>ST_could_be_read</name>
        <label>ST could be read</label>
        <locationX>280</locationX>
        <locationY>629</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varST</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_name</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Special actions after a Quality Event or Reclamation Order Case record is saved.

5.10.2023: Added path for WOLI initiated Case creation.
6.9.2023: Changed to be a scheduled flow
1.9.2023: Changed to run as system without sharing
26.6.2023: New field to replace the Asset.Service_Territory__c taken into use.
16.6.2023: ST is now retrieved from Asset instead of the WO.
5.6.2023: Changed logic to assign owner to ST specific IM queue.
12.1.2023: First version as a subflow.
02.12.2023: Save Active Version as R2</description>
    <environments>Default</environments>
    <interviewLabel>Case - Set Owner {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Set Owner R2</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Queue_Id</name>
        <label>Get Queue Id</label>
        <locationX>491</locationX>
        <locationY>959</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Queue_Id_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Queue_name.Related_Case_Queue_name__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_name</name>
        <label>Get Queue name</label>
        <locationX>392</locationX>
        <locationY>721</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Queue_name_exists_in_ST</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varST</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceTerritory</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Related_Case_Queue_name__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Service Territory id needed for determination.</description>
        <name>Get_ST_from_Asset</name>
        <label>Get ST from Asset</label>
        <locationX>40</locationX>
        <locationY>501</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_ST</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AssetId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Asset</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>ServiceTerritory__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Service Territory id needed for determination.</description>
        <name>Get_ST_from_WO</name>
        <label>Get ST from WO</label>
        <locationX>279</locationX>
        <locationY>495</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_ST_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkOrder</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>ServiceTerritoryId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_ST_from_WOLI</name>
        <label>Get ST from WOLI</label>
        <locationX>545</locationX>
        <locationY>372</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_ST_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Work_Order_Line_Item__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkOrderLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Owner</name>
        <label>Update Case Owner</label>
        <locationX>739</locationX>
        <locationY>1202</locationY>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Quality Event: Work Continues</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Quality Event: Work Stops</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Reclamation order</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <name>X1_minute</name>
            <connector>
                <targetReference>Originator_of_the_Case</targetReference>
            </connector>
            <label>1 minute</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>collUserIdsInST</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varST</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
