<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Set_AccountId</name>
        <label>Set AccountId</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>accountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Opportunity.AccountId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_ContactId</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_ContactId</name>
        <label>Set ContactId</label>
        <locationX>578</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>contactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Opportunity.ContactId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Customer_Country</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Customer_Country</name>
        <label>Set Customer Country</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>txtCountry</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Opportunity.Customer_Country_Code__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Which_Opportunity_Country</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_OpportunityId</name>
        <label>Set OpportunityId</label>
        <locationX>578</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>opportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Opportunity.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_AccountId</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Special_Case_Type</name>
        <label>Set Special Case Type</label>
        <locationX>314</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>txtReason</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Opportunity.Reason_for_preliminary_contract__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_Case_Type</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>This is used to choose Building permit type form case record type picklist</description>
        <name>BuildingPermitvalue</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Building_Permit</stringValue>
        </value>
    </constants>
    <constants>
        <description>This is case description for Building Permit Case type</description>
        <name>txtBuildingPermitCaseDescription</name>
        <dataType>String</dataType>
        <value>
            <stringValue>This Case was created automatically because Sales Opportunity related Preliminary Contract has been signed and work regarding Building Permit can start. Please refer to the Opportunity details when proceeding with Building Permit Application.</stringValue>
        </value>
    </constants>
    <decisions>
        <description>This desicion defines whether Preliminary Contract has been signed and Building Permit or Special Order Case should be created</description>
        <name>What_Case_Type</name>
        <label>What Case Type?</label>
        <locationX>314</locationX>
        <locationY>998</locationY>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>Building_Permit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>txtReason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Building Permit</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Building_Permit_Record_Type</targetReference>
            </connector>
            <label>Building Permit</label>
        </rules>
        <rules>
            <name>Special_Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>txtReason</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Special Order</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Special_Order_Record_Type</targetReference>
            </connector>
            <label>Special Order</label>
        </rules>
    </decisions>
    <decisions>
        <description>This retrieves the opportunity country/location in order that Building Permit or Special Order handling case can be assigned to right queue</description>
        <name>Which_Opportunity_Country</name>
        <label>Which Opportunity Country?</label>
        <locationX>578</locationX>
        <locationY>674</locationY>
        <defaultConnectorLabel>Other Country</defaultConnectorLabel>
        <rules>
            <name>Finland_or_Sweden</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>txtCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>FI</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>txtCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Queue</targetReference>
            </connector>
            <label>Finland or Sweden</label>
        </rules>
    </decisions>
    <description>This is subflow referenced by opportunity flow. This creates automatically sales process triggered building permit &amp; special order handling cases &amp; assigns them to right queue
13.12 Test
12.4.2023 Fixed minor issues
02.12.2023: Save Active Version as R2</description>
    <environments>Default</environments>
    <formulas>
        <name>fxCaseDescription</name>
        <dataType>String</dataType>
        <expression>&quot;This Case was created automatically because Sales Opportunity related Preliminary Contract has been signed and work regarding Special Order can start. Please refer to the Opportunity details when proceeding with &quot;+ SUBSTITUTE({!txtReason},&quot;_&quot;,&quot; &quot;)</expression>
    </formulas>
    <formulas>
        <name>fxCaseSubject</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!txtReason},&quot;_&quot;,&quot; &quot;)+ &quot; for &quot; +  {!Get_Opportunity.Name}</expression>
    </formulas>
    <interviewLabel>Create Case subflow - Building Permit &amp; Special Order {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Create Case SubFlow - Building Permit &amp; Special Order R2</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>This action creates Building Permit case</description>
        <name>Create_Case</name>
        <label>Create Case</label>
        <locationX>314</locationX>
        <locationY>1298</locationY>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>accountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>contactId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>fxCaseDescription</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Opportunity__c</field>
            <value>
                <elementReference>opportunityId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <stringValue>Sales Process</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>queueId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>recordTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>fxCaseSubject</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <elementReference>txtReason</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Gets the special order record type</description>
        <name>Get_Building_Permit_Record_Type</name>
        <label>Get Building Permit Record Type</label>
        <locationX>50</locationX>
        <locationY>1106</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Building</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Permit</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>recordTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>This retrieves the case queue to which case is supposed to be assigned</description>
        <name>Get_Case_Queue</name>
        <label>Get Case Queue</label>
        <locationX>314</locationX>
        <locationY>782</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Special_Case_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <elementReference>txtCountry</elementReference>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Technical</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Support</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>queueId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Opportunity</name>
        <label>Get Opportunity</label>
        <locationX>578</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_OpportunityId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>gets the special order record type</description>
        <name>Get_Special_Order_Record_Type</name>
        <label>Get Special Order Record Type</label>
        <locationX>314</locationX>
        <locationY>1106</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Special</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Order</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>recordTypeId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Opportunity</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>accountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>buildingPermitRecordTypeID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>contactId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>opportunityId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>queueId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This stores quote ID when opportunity creation triggers quote creation.</description>
        <name>QuoteID_from_quote_forsync</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recOpportunityOrder</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <name>recOpportunityQuote</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Quote</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordTypeId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This stores special order case ID</description>
        <name>SpecialOrderCaseID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>specialOrderRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>txtCountry</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>txtReason</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>txtSelectedPricebook</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
